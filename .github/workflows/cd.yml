name: Continuous Delivery for ArtefactGuide
on: push
#on:
#  push:
#    branches:
#      - 'main'
#    tags:
#      - 'v*.*.*'

jobs:
  build:
    name: Build and push Docker image to GitHub Container registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
        with:
          context: .
          file: ./devops/docker/frankenphp/Dockerfile
          target: production
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy image to host
    needs: build
    runs-on: ubuntu-latest
    environment: production
    permissions:
      packages: read
      contents: read
    steps:
      - name: echo
        run: echo ${{ secrets.TEST }}
      - name: Deploy to Docker Host via docker-compose
        uses: wshihadeh/docker-deployment-action@878e5822321b7acbcee5fe5fdb926d61d27656d6
        with:
          remote_docker_host: cbag_deployer@${{ secrets.DOCKER_REMOTE_HOST}} # user@myswarm.com
          #remote_docker_port: 22
          ssh_public_key: ${{ secrets.DOCKER_SSH_KNOWN_HOSTS }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          deployment_mode: docker-compose
          copy_stack_file: true
          deploy_path: ${{ secrets.DOCKER_DEPLOY_PATH }}
          stack_file_name: docker-compose.prod.yml
          pull_images_first: true
          keep_files: 5
          docker_prune: false
          args: up -d